---
- name: Make {{ podman_dir }}/{{ container_name }} directory
  ansible.builtin.file:
    path: "{{ podman_dir }}/{{ container_name }}"
    state: directory
    mode: "0770"

- name: Create a nextcloud network
  containers.podman.podman_network:
    name: nextcloud_network

- name: Make sure the MariaDB container is created and running
  containers.podman.podman_container:
    name: 'nextcloud-mariadb'
    image: 'mariadb:latest'
    networks:
      - name: nextcloud_network
    command: '--transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed --innodb-read-only-compressed=OFF'
    state: 'started'
    env:
      'PUID': '{{ guid }}'
      'PGID': '{{ guid }}'
      'TZ': '{{ timezone }}'
      'MYSQL_ROOT_PASSWORD': '{{ mysql_root_password }}'
      'MYSQL_DATABASE': '{{ mysql_db }}'
      'MYSQL_USER': '{{ mysql_user }}'
      'MYSQL_PASSWORD': '{{ mysql_password }}'
    volumes:
      - '{{ podman_dir }}/{{ container_name }}/mariadb/mysql:/var/lib/mysql'
    restart_policy: unless-stopped

- name: Make sure the Redis container is created and running
  containers.podman.podman_container:
    name: 'nextcloud-redis'
    networks:
      - name: nextcloud_network
    image: 'redis:alpine'
    state: 'started'
    restart_policy: unless-stopped

- name: Make sure the Nextcloud container is created and running
  containers.podman.podman_container:
    name: '{{ container_name }}'
    image: 'nextcloud:stable-apache'
    networks:
      - name: swag
      - name: nextcloud_network
    state: 'started'
    env:
      'PUID': '{{ guid }}'
      'PGID': '{{ guid }}'
      'TZ': '{{ timezone }}'
      'MYSQL_DATABASE': '{{ mysql_db }}'
      'MYSQL_USER': '{{ mysql_user }}'
      'MYSQL_PASSWORD': '{{ mysql_password }}'
      'MYSQL_HOST': 'nextcloud-mariadb'
    volumes:
      - '{{ podman_dir }}/{{ container_name }}/data:/var/www/html'
    restart_policy: unless-stopped

# - name: Schedule a Nextcloud library scan at midnight every day
#   cron:
#       name: Scan the Nextcloud library
#       hour: '0'
#       minute: '0'
#       job: 'docker exec nextcloud sudo -u abc php8 /config/www/nextcloud/occ files:scan --all'
